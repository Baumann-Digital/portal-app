<?xml version="1.0" encoding="UTF-8"?>
<project default="deploy" name="baudiApp" basedir="." xmlns:unless="ant:unless">
    <dirname property="baudiApp.basedir" file="${ant.file.baudiApp}"/>
    
    <!-- import default properties from file -->
    <property file="${baudiApp.basedir}/local.build.properties"/>
    <property file="${baudiApp.basedir}/build.properties"/>
    
    <target name="clean-all">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete file="expath-pkg.xml"/>
        <delete file="repo.xml"/>
    </target>
    
    <target name="clean">
        <antcall target="clean-build"/>
        <antcall target="clean-dist"/>
    </target>
    
    <target name="clean-build" if="${build.dir}">
        <delete includeemptydirs="true">
            <fileset dir="${build.dir}" defaultexcludes="false">
                <!--<include name="*.xml"/>
                <include name="*.txt"/>-->
                <include name="**/*"/>
                <exclude name="*.xar"/>
                <exclude name="*.tar.gz"/>
            </fileset>
        </delete>
    </target>
    
    <target name="clean-dist" if="${dist.dir}">
        <delete includeemptydirs="true">
            <fileset dir="${dist.dir}" defaultexcludes="false">
                <include name="**/*"/>
            </fileset>
        </delete>
    </target>
    
    <target name="init" depends="get-current-hash-of-HEAD">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>
    
    <target name="get-current-hash-of-HEAD">
        <description>Get the hash of the current git HEAD</description>
        <exec executable="${bash.command}" outputproperty="local.revision">
            <arg value="-c"/>
            <arg value="${git.command} rev-parse --short HEAD"/>
            <env key="LANG" value="C"/>
        </exec>
        <echo>Current HEAD: ${local.revision}</echo>
    </target>
    
    <target name="dist" depends="init">
        <property name="project.app.pkg.name" value="${project.app}-${project.version}-${local.revision}.xar"/>
        <copy todir="dist/">
            <fileset dir=".">
                <include name="**/*.*"/>
                <exclude name="build.xml"/>
                <exclude name=".existdb.json"/>
                <exclude name=".git*"/>
                <exclude name="*.tmpl"/>
                <exclude name="*.xpr"/>
                <exclude name="*.properties"/>
                <exclude name="build/**"/>
                <exclude name="dist/**"/>
                <exclude name="scripts/**"/>
                <exclude name="blob/"/>
                <exclude name="**/__contents__.xml"/>
            </fileset>
        </copy>
        
        <copy file="expath-pkg.xml.tmpl" tofile="dist/expath-pkg.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${project.app}"/>
                <filter token="project.name" value="${project.name}"/>
                <filter token="project.version" value="${project.version}"/>
                <filter token="project.version.hash" value="${local.revision}"/>
                <filter token="project.url" value="${project.url}"/>
            </filterset>
        </copy>
        <copy file="repo.xml.tmpl" tofile="dist/repo.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="data.target" value="${project.app}"/>
                <filter token="project.name" value="${project.name}"/>
                <filter token="db.user.name" value="${db.user.name}"/>
                <filter token="db.user.password" value="${db.user.password}"/>
                <filter token="db.user.group" value="${db.user.group}"/>
                <filter token="db.user.permissions" value="${db.user.permissions}"/>
            </filterset>
        </copy>
        <zip destfile="${build.dir}/${project.app.pkg.name}">
            <fileset dir="dist/">
                <include name="**/*.*"/>
            </fileset>
        </zip>
        <delete file="expath-pkg.xml"/>
        <delete file="repo.xml"/>
    </target>
    
    <!-- Deploy directly to localhost -->
    <target name="deploy" depends="clean, dist">
        <path id="classpath.eXist">
            <fileset dir="${exist.libs}" erroronmissingdir="no">
                <include name="*.jar"/>
            </fileset>
        </path>
        <typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">
            <classpath refid="classpath.eXist"/>
        </typedef>
        
        <!-- store xar-file in eXist-db -->
        <xdb:store xmlns:xdb="http://exist-db.org/ant"
            uri="${exist.db}/tmp"
            createcollection="true"
            createsubcollections="true"
            user="${exist.user}"
            password="${exist.pass}"
            failonerror="true">
            <fileset file="${build.dir}/${project.app.pkg.name}"/>
        </xdb:store>
        
        <!-- Deploy the xar -->
        <xdb:xquery  xmlns:xdb="http://exist-db.org/ant"
            uri="${exist.db}"
            user="${exist.user}"
            password="${exist.pass}"
            failonerror="true">
            (
            if("${project.url}" = repo:list()) then (
            repo:undeploy("${project.url}"),
            repo:remove("${project.url}")
            )
            else (),
            repo:install-and-deploy-from-db("/db/tmp/${project.app.pkg.name}")
            )
        </xdb:xquery>
    </target>
    
</project>
